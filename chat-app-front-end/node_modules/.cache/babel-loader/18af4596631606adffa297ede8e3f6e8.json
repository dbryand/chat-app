{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nic Cabunilas\\\\Documents\\\\Web_Development_Course\\\\workspace\\\\chat-app-front-end-vs\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport io from \"socket.io-client\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconst socket = io.connect('http://localhost:5000');\n\nfunction Chat(props) {\n  const [chat, setChat] = useState();\n  const [messages, setTextBox] = useState([]);\n\n  function handleChange(event) {\n    const {\n      value\n    } = event.target;\n    setChat(value);\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    socket.on('message', data => {\n      //message received\n      const {\n        username,\n        message\n      } = data;\n      setTextBox(prev => {\n        return [...prev, {\n          username,\n          message\n        }];\n      });\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('message', {\n      username: props.username,\n      message: chat.message\n    });\n    setChat(\"\");\n  }\n\n  function showOutput(message, index) {\n    const alt = \"You\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: message.username === props.username ? {\n        textAlign: \"right\"\n      } : {\n        textAlign: \"left\"\n      },\n      className: `message`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, message.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, message.username === chat.username ? alt : message.username));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, messages.map(showOutput)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"text-field\",\n    name: \"message\",\n    type: \"text\",\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    value: chat.message,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Send\"))));\n}\n\nexport default function App() {\n  const [creds, setCreds] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [loggedState, setState] = useState(false);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCreds(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          password: prev.password\n        };\n      } else {\n        return {\n          username: prev.username,\n          password: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    socket.on('login', data => {\n      if (data === \"ok\") {\n        setState(true);\n      } else if (data === \"wp\") {\n        setState(false);\n      } else {\n        setState(false);\n      }\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('login', {\n      username: creds.username,\n      password: creds.password\n    });\n    event.preventDefault();\n    setCreds({\n      username: \"\",\n      password: \"\"\n    });\n  }\n\n  if (loggedState === true) {\n    return /*#__PURE__*/React.createElement(Chat, {\n      username: creds.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: handleChange,\n      id: \"outlined-multiline-static\",\n      variant: \"outlined\",\n      name: \"username\",\n      type: \"text\",\n      value: creds.username,\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: handleChange,\n      id: \"outlined-multiline-static\",\n      variant: \"outlined\",\n      name: \"password\",\n      type: \"password\",\n      value: creds.password,\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"login-btn\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, \"Sign Up / Login\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \"By signing up, you agree ti the Terms of Service and Privacy Policy, including Cookie Use. Others will be able to find you by searching for you email address or phone number when provided.\"));\n  }\n}","map":{"version":3,"sources":["C:/Users/Nic Cabunilas/Documents/Web_Development_Course/workspace/chat-app-front-end-vs/src/App.js"],"names":["React","useState","useEffect","Header","io","TextField","Button","socket","connect","Chat","props","chat","setChat","messages","setTextBox","handleChange","event","value","target","on","data","username","message","prev","handleClick","emit","showOutput","index","alt","textAlign","map","App","creds","setCreds","password","loggedState","setState","name","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport io from \"socket.io-client\";\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst socket = io.connect('http://localhost:5000')\n\nfunction Chat(props){\n\n  const [chat, setChat] = useState();\n  const [messages, setTextBox] = useState([]);\n\n  function handleChange(event){\n      const {value} = event.target;\n      setChat(value);\n  }\n\n  //Listener\n  useEffect(function(){\n      //reply for logging in\n      socket.on('message', (data) => {\n        //message received\n        const {username, message} = data;\n        setTextBox((prev) => {\n          return [...prev, {username, message}]\n        })\n      })\n      \n  },[])\n\n  function handleClick(event){\n      \n      socket.emit('message', { \n          username: props.username, \n          message: chat.message \n      });\n\n      setChat(\"\");\n  }\n\n\n  function showOutput(message, index){\n    const alt = \"You\";\n    return (\n      <div key={index} style={message.username === props.username ? {textAlign: \"right\"}: {textAlign: \"left\"}} className={`message`}>\n        <div className='message-body'>\n          { message.message }\n        </div>\n        <div className='username'>\n          { message.username === chat.username ? alt : message.username }\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"container\">\n        <Header />\n        <form>\n        <div className=\"output\">\n          {messages.map(showOutput)}\n        </div>\n        <div className=\"input\">\n          <TextField\n            className=\"text-field\"\n            name=\"message\"\n            type=\"text\"\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n            value={chat.message}\n            onChange={handleChange}\n          />\n        <Button className=\"btn\" onClick={handleClick}>Send</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default function App() {\n\n  const [creds, setCreds] = useState({username: \"\", password: \"\"});\n  const [loggedState, setState] = useState(false);\n\n  function handleChange(event){\n      const {name, value} = event.target;\n      setCreds(prev => {\n          if(name === \"username\"){\n              return {\n                  username: value,\n                  password: prev.password\n              }\n          }else{\n              return {\n                  username: prev.username,\n                  password: value\n              }\n          }\n      })\n  }\n\n  //Listener\n  useEffect(function(){\n      //reply for logging in\n      socket.on('login', (data) => {\n          if(data === \"ok\"){\n              setState(true);\n          }else if(data === \"wp\"){\n              setState(false);\n          }else{\n              setState(false);  \n          }\n      })\n      \n  },[])\n\n  function handleClick(event){\n      \n      socket.emit('login', { \n          username: creds.username, \n          password: creds.password \n      });\n      \n      event.preventDefault();\n\n      setCreds({username: \"\", password: \"\"});\n  }\n\n  if(loggedState === true){\n    return <Chat username={creds.username}/>\n  }else{\n    return (\n      <div className=\"login\">\n          <Header />\n          <form>\n              <div>\n                <TextField\n                    onChange={handleChange}\n                    id=\"outlined-multiline-static\"\n                    variant=\"outlined\"\n                    name=\"username\"\n                    type=\"text\"\n                    value={creds.username}\n                    placeholder=\"Username\"\n                />\n              </div>\n              <div>\n                <TextField\n                   onChange={handleChange}\n                   id=\"outlined-multiline-static\"\n                   variant=\"outlined\"\n                   name=\"password\"\n                   type=\"password\"\n                   value={creds.password}\n                   placeholder=\"Password\"\n                />\n              </div>    \n              <Button className=\"login-btn\" onClick={handleClick}>Sign Up / Login</Button>\n            </form>\n            <p>By signing up, you agree ti the Terms of Service and Privacy Policy, including Cookie Use. Others will be able to find you by searching for you email address or phone number when provided.</p>\n    </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}