{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nic Cabunilas\\\\Documents\\\\Web_Development_Course\\\\workspace\\\\chat-app-front-end-vs\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport io from \"socket.io-client\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nconst socket = io.connect('http://localhost:5000');\n\nfunction LoginDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Agree\")));\n}\n\nfunction Login() {\n  const [creds, setCreds] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCreds(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          password: prev.password\n        };\n      } else {\n        return {\n          username: prev.username,\n          password: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    console.log(creds.username);\n    socket.on('login', data => {\n      if (data === \"ok\") {\n        /*#__PURE__*/\n        React.createElement(Dialog, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        });\n      } else if (data === \"wp\") {\n        window.open(\"/\", \"_self\");\n        alert(\"Error: wrong password\");\n      } else {\n        window.open(\"/\", \"_self\");\n        alert(\"Error in registration\");\n      }\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('login', {\n      username: creds.username,\n      password: creds.password\n    });\n    event.preventDefault();\n    setCreds({\n      username: \"\",\n      password: \"\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"username\",\n    type: \"text\",\n    value: creds.username,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    value: creds.password,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Sign Up / Login\")));\n}\n\nfunction Chat() {\n  const [chat, setChat] = useState({\n    username: \"\",\n    message: \"\"\n  });\n  const [messages, setTextBox] = useState([]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setChat(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          message: prev.message\n        };\n      } else {\n        return {\n          username: prev.username,\n          message: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    socket.on('message', data => {\n      //message received\n      const {\n        username,\n        message\n      } = data;\n      setTextBox(prev => {\n        return [...prev, {\n          username,\n          message\n        }];\n      });\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('message', {\n      username: chat.username,\n      message: chat.message\n    });\n    setChat({\n      username: chat.username,\n      message: \"\"\n    });\n  }\n\n  function showOutput(message) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, message.username, \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, message.message)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, messages.map(showOutput)), /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Username\",\n    value: chat.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    value: chat.message,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"Send Message\")));\n}\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/chat\",\n    component: Chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Nic Cabunilas/Documents/Web_Development_Course/workspace/chat-app-front-end-vs/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Header","io","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","socket","connect","LoginDialog","open","setOpen","handleClickOpen","handleClose","Login","creds","setCreds","username","password","handleChange","event","name","value","target","prev","console","log","on","data","window","alert","handleClick","emit","preventDefault","Chat","chat","setChat","message","messages","setTextBox","showOutput","map","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport io from \"socket.io-client\";\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button'\n\nconst socket = io.connect('http://localhost:5000')\n\nfunction LoginDialog(){\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n\nfunction Login(){\n\n  const [creds, setCreds] = useState({username: \"\", password: \"\"});\n\n  function handleChange(event){\n      const {name, value} = event.target;\n      setCreds(prev => {\n          if(name === \"username\"){\n              return {\n                  username: value,\n                  password: prev.password\n              }\n          }else{\n              return {\n                  username: prev.username,\n                  password: value\n              }\n          }\n      })\n  }\n\n  //Listener\n  useEffect(function(){\n      //reply for logging in\n      console.log(creds.username);\n      socket.on('login', (data) => {\n          if(data === \"ok\"){\n              <Dialog />\n          }else if(data === \"wp\"){\n              window.open(\"/\", \"_self\");\n              alert(\"Error: wrong password\");\n          }else{\n              window.open(\"/\", \"_self\");\n              alert(\"Error in registration\");\n          }\n      })\n      \n  },[])\n\n  function handleClick(event){\n      \n      socket.emit('login', { \n          username: creds.username, \n          password: creds.password \n      });\n      \n      event.preventDefault();\n\n      setCreds({username: \"\", password: \"\"});\n  }\n\n  return (\n    <div>\n        <Header />\n        <form>\n              <input\n                  onChange={handleChange}\n                  name=\"username\"\n                  type=\"text\"\n                  value={creds.username}\n                  placeholder=\"Username\"\n              />\n              <input\n                 onChange={handleChange}\n                 name=\"password\"\n                 type=\"password\"\n                 value={creds.password}\n                 placeholder=\"Password\"\n              />\n              <button onClick={handleClick}>Sign Up / Login</button>\n          </form>\n    </div>\n  );\n}\n\nfunction Chat(){\n\n  const [chat, setChat] = useState({username: \"\", message: \"\"});\n  const [messages, setTextBox] = useState([]);\n\n  function handleChange(event){\n      const {name, value} = event.target;\n      setChat(prev => {\n          if(name === \"username\"){\n              return {\n                  username: value,\n                  message: prev.message\n              }\n          }else{\n              return {\n                  username: prev.username,\n                  message: value\n              }\n          }\n      })\n  }\n\n  //Listener\n  useEffect(function(){\n      //reply for logging in\n      socket.on('message', (data) => {\n        //message received\n        const {username, message} = data;\n        setTextBox((prev) => {\n          return [...prev, {username, message}]\n        })\n      })\n      \n  },[])\n\n  function handleClick(event){\n      \n      socket.emit('message', { \n          username: chat.username, \n          message: chat.message \n      });\n\n      setChat({username: chat.username, message: \"\"});\n  }\n\n\n  function showOutput(message){\n    return (\n        <div>\n          <h3>\n            {message.username}: <span>{message.message}</span>\n          </h3>\n        </div>\n    )\n  }\n  \n  return (\n    <div>\n        <Header />\n        <form>\n        <div className=\"name-field\">\n        <div className=\"output\">\n          {messages.map(showOutput)}\n        </div>\n        <TextField\n            name=\"username\"\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Username\"\n            value={chat.username}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n            value={chat.message}\n            onChange={handleChange}\n          />\n        </div>\n        <Button onClick={handleClick}>Send Message</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/chat\" component={Chat}/>\n      </Router>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}