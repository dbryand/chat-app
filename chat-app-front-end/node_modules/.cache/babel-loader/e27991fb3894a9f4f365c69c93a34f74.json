{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nic Cabunilas\\\\Documents\\\\Web_Development_Course\\\\workspace\\\\chat-app-front-end-vs\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport io from \"socket.io-client\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconst socket = io.connect('http://localhost:5000');\n\nfunction Login() {\n  const [creds, setCreds] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCreds(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          password: prev.password\n        };\n      } else {\n        return {\n          username: prev.username,\n          password: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    console.log(creds.username);\n    socket.on('login', data => {\n      if (data === \"ok\") {\n        window.open(\"/chat\", \"_self\");\n      } else if (data === \"wp\") {\n        window.open(\"/\", \"_self\");\n        alert(\"Error: wrong password\");\n      } else {\n        window.open(\"/\", \"_self\");\n        alert(\"Error in registration\");\n      }\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('login', {\n      username: creds.username,\n      password: creds.password\n    });\n    event.preventDefault();\n    setCreds({\n      username: \"\",\n      password: \"\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"username\",\n    type: \"text\",\n    value: creds.username,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    value: creds.password,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Sign Up / Login\")));\n}\n\nfunction Chat() {\n  const [chat, setChat] = useState({\n    username: \"\",\n    message: \"\"\n  });\n  const [messages, setTextBox] = useState([]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setChat(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          message: prev.message\n        };\n      } else {\n        return {\n          username: prev.username,\n          message: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    socket.on('message', data => {\n      //message received\n      const {\n        username,\n        message\n      } = data;\n      setTextBox(prev => {\n        return [...prev, {\n          username,\n          message\n        }];\n      });\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('message', {\n      username: chat.username,\n      message: chat.message\n    });\n    setChat({\n      username: chat.username,\n      message: \"\"\n    });\n  }\n\n  function showOutput(message, index) {\n    const alt = \"You\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: message.username === chat.username ? {\n        textAlign: \"right\"\n      } : {\n        textAlign: \"left\"\n      },\n      className: `message`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, message.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, message.username === chat.username ? alt : message.username));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, messages.map(showOutput)), /*#__PURE__*/React.createElement(TextField, {\n    className: \"name-field\",\n    name: \"username\",\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Username\",\n    value: chat.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"text-field\",\n    name: \"message\",\n    type: \"text\",\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    value: chat.message,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Send\"))));\n}\n\nexport default function App() {\n  const [creds, setCreds] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [loggedState, setState] = useState(false);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCreds(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          password: prev.password\n        };\n      } else {\n        return {\n          username: prev.username,\n          password: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    console.log(creds.username);\n    socket.on('login', data => {\n      if (data === \"ok\") {\n        setState(true);\n      } else if (data === \"wp\") {\n        setState(false);\n      } else {\n        setState(false);\n      }\n    });\n  }, []);\n\n  function handleClick(event) {\n    socket.emit('login', {\n      username: creds.username,\n      password: creds.password\n    });\n    event.preventDefault();\n    setCreds({\n      username: \"\",\n      password: \"\"\n    });\n  }\n\n  if (loggedState === true) {\n    return /*#__PURE__*/React.createElement(Chat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: handleChange,\n      id: \"outlined-multiline-static\",\n      variant: \"outlined\",\n      name: \"username\",\n      type: \"text\",\n      value: creds.username,\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: handleChange,\n      id: \"outlined-multiline-static\",\n      variant: \"outlined\",\n      name: \"password\",\n      type: \"password\",\n      value: creds.password,\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, \"Sign Up / Login\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, \"By signing up, you agree ti the Terms of Service and Privacy Policy, including Cookie Use. Others will be able to find you by searching for you email address or phone number when provided.\"));\n  }\n}","map":{"version":3,"sources":["C:/Users/Nic Cabunilas/Documents/Web_Development_Course/workspace/chat-app-front-end-vs/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Header","io","TextField","Button","socket","connect","Login","creds","setCreds","username","password","handleChange","event","name","value","target","prev","console","log","on","data","window","open","alert","handleClick","emit","preventDefault","Chat","chat","setChat","message","messages","setTextBox","showOutput","index","alt","textAlign","map","App","loggedState","setState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport io from \"socket.io-client\";\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst socket = io.connect('http://localhost:5000')\n\nfunction Login(){\n\n    const [creds, setCreds] = useState({username: \"\", password: \"\"});\n\n    function handleChange(event){\n        const {name, value} = event.target;\n        setCreds(prev => {\n            if(name === \"username\"){\n                return {\n                    username: value,\n                    password: prev.password\n                }\n            }else{\n                return {\n                    username: prev.username,\n                    password: value\n                }\n            }\n        })\n    }\n\n    //Listener\n    useEffect(function(){\n        //reply for logging in\n        console.log(creds.username);\n        socket.on('login', (data) => {\n            if(data === \"ok\"){\n                window.open(\"/chat\", \"_self\");\n            }else if(data === \"wp\"){\n                window.open(\"/\", \"_self\");\n                alert(\"Error: wrong password\");\n            }else{\n                window.open(\"/\", \"_self\");\n                alert(\"Error in registration\");\n            }\n        })\n        \n    },[])\n\n    function handleClick(event){\n        \n        socket.emit('login', { \n            username: creds.username, \n            password: creds.password \n        });\n        \n        event.preventDefault();\n\n        setCreds({username: \"\", password: \"\"});\n    }\n\n    return (\n      <div>\n          <Header />\n          <form>\n                <input\n                    onChange={handleChange}\n                    name=\"username\"\n                    type=\"text\"\n                    value={creds.username}\n                    placeholder=\"Username\"\n                />\n                <input\n                   onChange={handleChange}\n                   name=\"password\"\n                   type=\"password\"\n                   value={creds.password}\n                   placeholder=\"Password\"\n                />\n                <button onClick={handleClick}>Sign Up / Login</button>\n            </form>\n      </div>\n    );\n}\n\nfunction Chat(){\n\n  const [chat, setChat] = useState({username: \"\", message: \"\"});\n  const [messages, setTextBox] = useState([]);\n\n  function handleChange(event){\n      const {name, value} = event.target;\n      setChat(prev => {\n          if(name === \"username\"){\n              return {\n                  username: value,\n                  message: prev.message\n              }\n          }else{\n              return {\n                  username: prev.username,\n                  message: value\n              }\n          }\n      })\n  }\n\n  //Listener\n  useEffect(function(){\n      //reply for logging in\n      socket.on('message', (data) => {\n        //message received\n        const {username, message} = data;\n        setTextBox((prev) => {\n          return [...prev, {username, message}]\n        })\n      })\n      \n  },[])\n\n  function handleClick(event){\n      \n      socket.emit('message', { \n          username: chat.username, \n          message: chat.message \n      });\n\n      setChat({username: chat.username, message: \"\"});\n  }\n\n\n  function showOutput(message, index){\n    const alt = \"You\";\n    return (\n      <div key={index} style={message.username === chat.username ? {textAlign: \"right\"}: {textAlign: \"left\"}} className={`message`}>\n        <div className='message-body'>\n          { message.message }\n        </div>\n        <div className='username'>\n          { message.username === chat.username ? alt : message.username }\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"container\">\n        <Header />\n        <form>\n        <div className=\"name-field\">\n        <div className=\"output\">\n          {messages.map(showOutput)}\n        </div>\n        <TextField\n            className=\"name-field\"\n            name=\"username\"\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Username\"\n            value={chat.username}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input\">\n          <TextField\n            className=\"text-field\"\n            name=\"message\"\n            type=\"text\"\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n            value={chat.message}\n            onChange={handleChange}\n          />\n        <Button className=\"btn\" onClick={handleClick}>Send</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default function App() {\n\n  const [creds, setCreds] = useState({username: \"\", password: \"\"});\n  const [loggedState, setState] = useState(false);\n\n  function handleChange(event){\n      const {name, value} = event.target;\n      setCreds(prev => {\n          if(name === \"username\"){\n              return {\n                  username: value,\n                  password: prev.password\n              }\n          }else{\n              return {\n                  username: prev.username,\n                  password: value\n              }\n          }\n      })\n  }\n\n  //Listener\n  useEffect(function(){\n      //reply for logging in\n      console.log(creds.username);\n      socket.on('login', (data) => {\n          if(data === \"ok\"){\n              setState(true);\n          }else if(data === \"wp\"){\n              setState(false);\n          }else{\n              setState(false);  \n          }\n      })\n      \n  },[])\n\n  function handleClick(event){\n      \n      socket.emit('login', { \n          username: creds.username, \n          password: creds.password \n      });\n      \n      event.preventDefault();\n\n      setCreds({username: \"\", password: \"\"});\n  }\n\n  if(loggedState === true){\n    return <Chat />\n  }else{\n    return (\n      <div>\n          <Header />\n          <form>\n              <div>\n                <TextField\n                    onChange={handleChange}\n                    id=\"outlined-multiline-static\"\n                    variant=\"outlined\"\n                    name=\"username\"\n                    type=\"text\"\n                    value={creds.username}\n                    placeholder=\"Username\"\n                />\n              </div>\n              <div>\n                <TextField\n                   onChange={handleChange}\n                   id=\"outlined-multiline-static\"\n                   variant=\"outlined\"\n                   name=\"password\"\n                   type=\"password\"\n                   value={creds.password}\n                   placeholder=\"Password\"\n                />\n              </div>    \n              <Button onClick={handleClick}>Sign Up / Login</Button>\n            </form>\n            <p>By signing up, you agree ti the Terms of Service and Privacy Policy, including Cookie Use. Others will be able to find you by searching for you email address or phone number when provided.</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}