{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nic Cabunilas\\\\Documents\\\\Web_Development_Course\\\\workspace\\\\chat-app-front-end-vs\\\\src\\\\Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nconst socket = io.connect(\"http://localhost:5000\");\nexport default function Login() {\n  const [creds, setCreds] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCreds(prev => {\n      if (name === \"username\") {\n        return {\n          username: value,\n          password: prev.password\n        };\n      } else {\n        return {\n          username: prev.username,\n          password: value\n        };\n      }\n    });\n  } //Listener\n\n\n  useEffect(function () {\n    //reply for logging in\n    socket.on('login', data => {\n      console.log(data);\n    });\n  });\n\n  function handleClick(event) {\n    socket.emit('login', {\n      username: creds.username,\n      password: creds.password\n    });\n    console.log(creds);\n    event.preventDefault(); //clear text fields\n\n    setCreds({\n      username: \"\",\n      password: \"\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Nic Cabunilas/Documents/Web_Development_Course/workspace/chat-app-front-end-vs/src/Login.js"],"names":["React","useState","useEffect","io","Header","Form","socket","connect","Login","creds","setCreds","username","password","handleChange","event","name","value","target","prev","on","data","console","log","handleClick","emit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;AAEA,eAAe,SAASC,KAAT,GAAgB;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAD,CAAlC;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACAP,IAAAA,QAAQ,CAACQ,IAAI,IAAI;AACb,UAAGH,IAAI,KAAK,UAAZ,EAAuB;AACnB,eAAO;AACHJ,UAAAA,QAAQ,EAAEK,KADP;AAEHJ,UAAAA,QAAQ,EAAEM,IAAI,CAACN;AAFZ,SAAP;AAIH,OALD,MAKK;AACD,eAAO;AACHD,UAAAA,QAAQ,EAAEO,IAAI,CAACP,QADZ;AAEHC,UAAAA,QAAQ,EAAEI;AAFP,SAAP;AAIH;AACJ,KAZO,CAAR;AAaH,GAnB0B,CAqB3B;;;AACAd,EAAAA,SAAS,CAAC,YAAU;AAChB;AACAI,IAAAA,MAAM,CAACa,EAAP,CAAU,OAAV,EAAoBC,IAAD,IAAU;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFD;AAGH,GALQ,CAAT;;AAOA,WAASG,WAAT,CAAqBT,KAArB,EAA2B;AACvBR,IAAAA,MAAM,CAACkB,IAAP,CAAY,OAAZ,EAAqB;AACjBb,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QADC;AAEjBC,MAAAA,QAAQ,EAAEH,KAAK,CAACG;AAFC,KAArB;AAIAS,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAK,IAAAA,KAAK,CAACW,cAAN,GANuB,CAQvB;;AACAf,IAAAA,QAAQ,CAAC;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,QAAQ,EAAE;AAAzB,KAAD,CAAR;AACH;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAMH","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Header from \"./Header\";\r\nimport Form from \"./Form\";\r\n\r\nconst socket = io.connect(\"http://localhost:5000\");\r\n\r\nexport default function Login(){\r\n\r\n    const [creds, setCreds] = useState({username: \"\", password: \"\"});\r\n\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n        setCreds(prev => {\r\n            if(name === \"username\"){\r\n                return {\r\n                    username: value,\r\n                    password: prev.password\r\n                }\r\n            }else{\r\n                return {\r\n                    username: prev.username,\r\n                    password: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    //Listener\r\n    useEffect(function(){\r\n        //reply for logging in\r\n        socket.on('login', (data) => {\r\n            console.log(data);\r\n        })\r\n    })\r\n\r\n    function handleClick(event){\r\n        socket.emit('login', { \r\n            username: creds.username, \r\n            password: creds.password \r\n        });\r\n        console.log(creds);\r\n        event.preventDefault();\r\n\r\n        //clear text fields\r\n        setCreds({username: \"\", password: \"\"});\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <Header />\r\n          <Form />\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}